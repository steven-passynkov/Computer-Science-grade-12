package ovs;

import java.awt.Color;

/**
 * File Name:FractionReducer.java 
 * Person Programmer: Steven Passynkov 
 * Date: 07 Sep 2024 
 * Description: FractionReducer program allows user to find GCD for
 * numbers
 */
public class FractionReducer extends javax.swing.JFrame {

    /**
     * Creates new form FractionReducer
     */
    public FractionReducer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        numeratorField1 = new javax.swing.JTextField();
        denominatorField1 = new javax.swing.JTextField();
        resultLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jButton1.setText("Reduce");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        resultLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel1.setText("Numerator Field:");

        jLabel2.setText("Denominator Field:");

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jTextField1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jTextField1.setText("Fraction Reducer");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(denominatorField1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numeratorField1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numeratorField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(denominatorField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultLabel)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Calculate Greatest Common Divisor using Euclidean algorithm
     *
     * @param num1
     * @param num2
     * @return
     */
    public static int doGCD(int num1, int num2) {
        // if num2 - 0 stop
        if (num2 == 0) {
            return num1;
        }
        // call recusivly doGCD with num2 and remainder of num1/num2
        return doGCD(num2, num1 % num2);
    }

    /**
     * Get number in mixed format
     *
     * @param numerator numerator
     * @param denominator denominator
     * @return mixed format
     */
    public static String getMixedFraction(int numerator, int denominator) {
        // if denominator negative - revert to have sign before numerator
        if (denominator < 0) {
            // revert numerator
            numerator = -numerator;
            // revert denominator
            denominator = -denominator;
        }

        // calculate whole number part and remainder
        int wPart = numerator / denominator;
        // calculate remainder
        int remainder = Math.abs(numerator % denominator);

        // if whole
        if (remainder == 0) {
            // return whole
            return String.valueOf(wPart);
        } // if mixed number
        else if (Math.abs(numerator) >= Math.abs(denominator)) {
            // return mixed fraction
            return String.format("%d %d/%d", wPart, remainder, denominator);
        } else {
            // return proper fraction
            return String.format("%d/%d", numerator, denominator);
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // check that fields are populated for fraction
            boolean hasFraction = !numeratorField1.getText().isEmpty() && !denominatorField1.getText().isEmpty();

            // Check if neither fraction is provided
            if (!hasFraction) {
                // show error in red color and exit
                resultLabel.setForeground(Color.RED);
                resultLabel.setText("Please enter the fraction!");
                return;
            }
            // get number for text for numerator
            int numerator = Integer.parseInt(numeratorField1.getText());
            // get number for text for denominator
            int denominator = Integer.parseInt(denominatorField1.getText());

            // denominator can't be 0
            if (denominator == 0) {
                // show error
                resultLabel.setForeground(Color.RED);
                resultLabel.setText("Denominator cannot be zero!");
                return;
            }

            // numerator and denominator for reduced fractions
            int reducedNumerator = 0;
            int reducedDenominator = 0;

            // reduce fraction
            int gcd = doGCD(numerator, denominator);
            // devide numerator on gcd
            reducedNumerator = numerator / gcd;
            // devide denominator on gcd
            reducedDenominator = denominator / gcd;

            // show result using getMixedFraction 
            resultLabel.setForeground(Color.BLACK);
            resultLabel.setText("The number " + getMixedFraction(numerator, denominator) + " in lowest terms is "
                    + getMixedFraction(reducedNumerator, reducedDenominator) + ".");

        } catch (NumberFormatException e) {
            // get exception - hsow error in red
            resultLabel.setForeground(Color.RED);
            resultLabel.setText("Please enter valid integers!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FractionReducer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FractionReducer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField denominatorField1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField numeratorField1;
    private javax.swing.JLabel resultLabel;
    // End of variables declaration//GEN-END:variables
}
